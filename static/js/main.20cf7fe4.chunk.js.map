{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoIcon/index.js","TodoIcon/CompleteIcon.js","TodoIcon/DeleteIcon.js","TodoItem/index.js","TodoList/index.js","CreateTodoButton/index.js","TodoSearch/index.js","Modal/index.js","TodoForm/index.js","TodosError/index.js","TodosLoading/index.js","EmptyTodos/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","console","log","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","t","deleteTodo","splice","children","TodoCounter","total","useContext","className","iconTypes","color","fill","TodoIcon","type","onClick","CompleteIcon","onComplete","DeleteIcon","onDelete","TodoItem","TodoList","CreateTodoButton","prevState","TodoSearch","placeholder","onChange","event","target","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","TodosError","TodosLoading","EmptyTodos","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.20cf7fe4.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n    const {item: todos, saveItem: saveTodos, loading, error} = useLocalStorage('TODOS_V1', []);\n  \n    const [searchValue, setSearchValue] = React.useState('');\n    const [openModal, setOpenModal] = React.useState(false);\n    \n    const completedTodos = todos.filter(todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n    \n    let searchedTodos = [];\n    \n    if (!searchValue.length >= 1) {\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter(todo => {\n        const todoText = todo.text.toLowerCase();\n        const searchText = searchValue.toLowerCase();\n        return todoText.includes(searchText);\n        });  \n    }\n    \n    \n    const addTodo = (text) => {\n        \n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n        });\n        \n        saveTodos(newTodos);\n    }\n\n    const completeTodo = (text) => {\n        console.log(\"completeTodo: \"+text);\n        const todoIndex = todos.findIndex(t => t.text === text);\n        \n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = true;\n        \n        saveTodos(newTodos);\n    }\n    \n    const deleteTodo = (text) => {\n        \n        const todoIndex = todos.findIndex(t => t.text === text);\n        \n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        \n        saveTodos(newTodos);\n    }\n    \n    console.log(\"render antes del use efect\");\n    \n    /*\n    React.useEffect(() => {\n        console.log(\"use effect\");\n    }, [totalTodos]);\n    */\n    \n    console.log(\"render despues use efects\");\n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            addTodo,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n            openModal,\n            setOpenModal\n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n}\n\nexport { TodoContext, TodoProvider };","import React from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) {\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n  \n    React.useEffect( () => {\n      setTimeout(() => {\n        try {\n  \n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n          \n          if (!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = [];\n          } else {\n            parsedItem = JSON.parse(localStorageItem);\n          }\n    \n          setItem(parsedItem);\n          setLoading(false);\n  \n        } catch (error) {\n          setError(error);\n        }\n      }, 3000);\n    }\n    );\n  \n  \n    \n  \n    const saveItem = (newItem) => {\n      try {\n        const stringifiedItem= JSON.stringify(newItem);\n        localStorage.setItem(itemName, stringifiedItem);\n        setItem(newItem);\n        \n  \n      } catch (error) {\n        setError(error);\n      }\n    };\n    \n    return {\n      item,\n      saveItem,\n      loading,\n      error,\n    };\n  }\n  \n  export { useLocalStorage };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css';\n\nfunction TodoCounter({total, completed}) {\n    const { totalTodos, completedTodos } = React.useContext(TodoContext);\n    return(\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n    );\n}\n\nexport { TodoCounter };","import React from \"react\";\nimport {FaCheckCircle} from 'react-icons/fa';\nimport {MdCancel} from 'react-icons/md';\nimport './TodoIcon.css'\n\nconst iconTypes = {\n    \"check\": color => (\n        <FaCheckCircle className=\"Icon-svg Icon-svg--check\" fill={color} />\n    ),\n    \"delete\": color => (\n        <MdCancel className=\"Icon-svg Icon-svg--delete\" fill={color}/>\n    )\n}\n\nfunction TodoIcon({type, color = 'gray', onClick}) {\n    return (\n        <span\n            className={`Icon-container Icon-container--${type}`}\n            onClick={onClick}\n        >\n            {iconTypes[type](color)}\n        </span>\n    );\n}\n\nexport { TodoIcon };","import React from \"react\";\nimport { TodoIcon } from  \"./\";\n\nfunction CompleteIcon({ completed, onComplete}) {\n    return (\n        <TodoIcon \n            type=\"check\"\n            color={completed ? '#4caf50' : 'gray'}\n            onClick={onComplete}\n        />\n    );\n}\n\nexport { CompleteIcon };","import React from \"react\";\nimport { TodoIcon } from \"./\";\n\nfunction DeleteIcon({ onDelete }) {\n    return (\n        <TodoIcon \n            type=\"delete\"\n            onClick={onDelete}\n        />\n    );\n}\n\nexport { DeleteIcon };","import React from 'react';\nimport { CompleteIcon } from '../TodoIcon/CompleteIcon';\nimport { DeleteIcon } from '../TodoIcon/DeleteIcon';\nimport './TodoItem.css'\n\nfunction TodoItem(props) {\n\n    return (\n        <li className=\"TodoItem\">\n            <CompleteIcon \n                completed={props.completed}\n                onComplete={props.onComplete}\n            />\n            <p \n                className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}\n                \n            >{props.text}</p>\n            <DeleteIcon \n                onDelete={props.onDelete}\n            />\n        </li>\n    );\n}\n\nexport { TodoItem };","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n    return (\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n}\n\nexport { TodoList };","import React from 'react';\nimport './CreateTodoButton.css'\n\nfunction CreateTodoButton(props) {\n\n    const onClickButton = () => {\n        props.setOpenModal(prevState => !prevState);\n        \n    }\n\n    return (\n        <button \n            className=\"CreateTodoButton\"\n            onClick={onClickButton}\n        >\n            +\n        </button>\n    );\n}\n\nexport { CreateTodoButton };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n\n    const { searchValue, setSearchValue } = React.useContext(TodoContext);\n\n    const onSearchValueChange = (event) => {\n        console.log(event.target.value);\n        setSearchValue(event.target.value)\n        \n    }\n\n    return (\n\n        <input \n            className=\"TodoSearch\" \n            placeholder=\"Cebolla\" \n            value={searchValue}\n            onChange={onSearchValueChange}\n        />\n    );\n      \n}\n\nexport { TodoSearch };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css'\n\nfunction Modal({ children }) {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    );\n}\n\nexport { Modal };","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\n\nfunction TodoForm() {\n\n    const [newTodoValue, setNewTodoValue] = React.useState('');\n\n    const {\n        addTodo,\n        setOpenModal,\n    } = React.useContext(TodoContext);\n\n    const onCancel = () => {\n        setOpenModal(false);\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    };\n\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    }\n    \n\n    return (\n        <form onSubmit={onSubmit}>\n            <label>...</label>\n            <textarea \n                value={newTodoValue}\n                placeholder=\"Cortar la cebolla\" \n                onChange={onChange}\n            />\n            <div>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                >\n                    Cancelar\n                </button>\n                <button\n                    type=\"submit\"\n                    onClick={onSubmit}\n                >\n                    Añadir\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport { TodoForm };","import React from \"react\";\n\nfunction TodosError({error}) {\n    return <p>hubo un error</p>\n}\n\nexport { TodosError };","import React from \"react\";\nimport './TodosLoading.css';\n\nfunction TodosLoading() {\n    return (\n        <div className=\"LoadingTodo-container\">\n            <span className=\"LoadingTodo-completeIcon\"></span>\n            <p className=\"LoadingTodo-text\">Cargando TODOs</p>\n            <span className=\"LoadingTodo-deleteIcon\"></span>\n        </div>\n    );\n}\n\nexport { TodosLoading };","import React from \"react\";\n\nfunction EmptyTodos() {\n    return <p>Crea tu primer todo!</p>\n}\n\nexport { EmptyTodos };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoItem } from '../TodoItem';\nimport { TodoList } from '../TodoList';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { TodoSearch } from '../TodoSearch';\nimport { Modal } from '../Modal';\nimport { TodoForm } from '../TodoForm';\nimport { TodosError } from '../TodosError';\nimport { TodosLoading } from '../TodosLoading';\nimport { EmptyTodos } from '../EmptyTodos';\n\nfunction AppUI() {\n\n    const { \n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n    } = React.useContext(TodoContext);\n\n    return (\n        <React.Fragment>\n        <TodoCounter />\n        <TodoSearch />\n        \n        \n        <TodoList>\n            {error && <TodosError />}\n            {loading && <TodosLoading />}\n            {(!loading && !searchedTodos.length) && <EmptyTodos />}\n\n            { searchedTodos.map(todo => (\n            <TodoItem \n                key={todo.text} \n                text={todo.text}\n                completed={todo.completed}\n                onComplete={() => completeTodo(todo.text)}\n                onDelete={() => deleteTodo(todo.text)}\n            />\n            )) }\n        </TodoList>\n    \n        {!!openModal && (\n            <Modal>\n                <TodoForm />\n            </Modal>\n        )}\n        <CreateTodoButton\n            openModal = {openModal} \n            setOpenModal={setOpenModal}\n        />\n        </React.Fragment> \n    );\n}\n\nexport { AppUI };","import React from 'react';\nimport { AppUI } from './AppUI'\nimport './App.css';\nimport { TodoProvider } from '../TodoContext';\n\nfunction App({props}) {\n  \n\n\n  return (\n     <TodoProvider>\n       <AppUI />\n     </TodoProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}